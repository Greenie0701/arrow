name: Windows tests

on:
  push:
    branches:
      - woa

jobs:
  windows-clang-ARM64:
    name: Windows CLANG ARM64 C++
    runs-on: windows-11-arm
    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}
    timeout-minutes: 120
    env:
      ARROW_BUILD_SHARED: ON
      ARROW_BUILD_STATIC: OFF
      ARROW_BUILD_TESTS: ON
      ARROW_BUILD_TYPE: release
      ARROW_DATASET: ON
      ARROW_FLIGHT: ON
      ARROW_FLIGHT_SQL: ON
      ARROW_FLIGHT_SQL_ODBC: ON
      ARROW_GANDIVA: ON
      ARROW_GCS: ON
      ARROW_HDFS: OFF
      ARROW_HOME: /clang-winarm64
      ARROW_JEMALLOC: OFF
      ARROW_PARQUET: ON
      ARROW_S3: ON
      ARROW_SUBSTRAIT: ON
      ARROW_USE_GLOG: OFF
      ARROW_VERBOSE_THIRDPARTY_BUILD: OFF
      ARROW_WITH_BROTLI: ON
      ARROW_WITH_BZ2: ON
      ARROW_WITH_LZ4: ON
      ARROW_WITH_OPENTELEMETRY: OFF
      ARROW_WITH_SNAPPY: ON
      ARROW_WITH_ZLIB: ON
      ARROW_WITH_ZSTD: ON
      ARROW_CMAKE_ARGS: >-
        -DARROW_PACKAGE_PREFIX=/clang-winarm64
        -DCMAKE_FIND_PACKAGE_PREFER_CONFIG=ON
  
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
  
      - name: Set MSVC for Windows-ARM64
        uses: bus1/cabuild/action/msdevshell@e22aba57d6e74891d059d66501b6b5aed8123c4d  # v1
        with:
          architecture: arm64
  
      - name: Install LLVM
        shell: pwsh
        run: |
          Invoke-WebRequest https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.8/LLVM-20.1.8-woa64.exe -UseBasicParsing -OutFile LLVM-woa64.exe
          Start-Process -FilePath ".\LLVM-woa64.exe" -ArgumentList "/S" -Wait
          echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  
      - name: Setup vcpkg
        shell: pwsh
        run: |
          # Clone vcpkg
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          cd C:\vcpkg
          .\bootstrap-vcpkg.bat
          
          # Set environment variable
          echo "VCPKG_ROOT=C:\vcpkg" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "C:\vcpkg" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  
      - name: Install Arrow dependencies via vcpkg
        shell: pwsh
        run: |
          # Install ARM64 dependencies
          vcpkg install --triplet=arm64-windows `
            boost-filesystem boost-system boost-algorithm boost-crc `
            snappy brotli lz4 zlib zstd bzip2 `
            openssl gflags thrift protobuf rapidjson re2 `
            utf8proc xsimd nlohmann-json `
            abseil crc32c benchmark gtest `
            grpc aws-sdk-cpp azure-sdk-for-cpp google-cloud-cpp
  
      - name: Build
        shell: pwsh
        run: |
          $env:CMAKE_BUILD_PARALLEL_LEVEL = $env:NUMBER_OF_PROCESSORS
          .\ci\scripts\cpp_build_arm64.ps1 "$(Get-Location)" "$(Get-Location)\build"
